#!define DBURL "postgres://kamailio:kamailiorw@localhost:5432/kamailio"

loadmodule "pv.so"
loadmodule "ctl.so"
loadmodule "jsonrpcs.so"
loadmodule "tm.so"
loadmodule "textops.so"
loadmodule "sl.so"
loadmodule "usrloc.so"
loadmodule "registrar.so"
loadmodule "auth.so"
loadmodule "db_postgres.so"
loadmodule "auth_db.so"
loadmodule "siputils.so"
loadmodule "nathelper.so"
loadmodule "rr.so"
loadmodule "xlog.so"
loadmodule "http_async_client.so"
loadmodule "jansson.so"

modparam("auth_db", "db_url", DBURL);

request_route {
        route(REQINIT);
 
        if (is_method("CANCEL")) {
                if (t_check_trans()) {
                        route(RELAY);
                }
                exit;
        }
 
        if (is_method("INVITE") || is_method("REGISTER")) {
                route(NAT);
        }
 
        if (is_method("REGISTER")) {
                route(AUTH);
        }
 
        route(DIALOG);
}
 
route[REQINIT] {
        force_rport;
}
 
route[AUTH] {
                if (!auth_check("$fd", "subscriber", "1")) {
                        auth_challenge("$fd", "1");
                        exit;
                }
                if (is_method("REGISTER")) {
                        save("location");
                        exit;
                } else {
                        return;
                }
}
 
route[NAT] {
        if (nat_uac_test("19")) {
                if (is_method("REGISTER")) {
                        set_contact_alias();
                } else {
                        if(is_first_hop()) {
                                set_contact_alias();
                        }
                }
        }
        return;
}
 
route[DIALOG] {
        if (is_method("INVITE")) {
                route(AUTH);
                if (!lookup("location")) {
                        sl_send_reply("403", "Forbidden");
                        exit;
                }
                handle_ruri_alias();
                record_route();
                xlog("L_INFO","TRY RESTRICT CHECK");
                route(MAYBE_RESTRICT);
        }
        if (has_totag()) {
                if (loose_route()) {
                        handle_ruri_alias();
                        route(RELAY);
                }
        }
        if (is_method("ACK")) {
                if ( t_check_trans() ) {
                        route(RELAY);
                        exit;
                } else {
                        exit;
                }
        }
}
 
route[RELAY] {
        t_on_reply("REPLY");
        t_relay();
}
 
onreply_route[REPLY] {
        route(NAT);
}

route[MAYBE_RESTRICT] {
    $http_req(all) = $null;
    $http_req(method) = "POST";
    $http_req(hdr) = "Content-Type: application/json";
    jansson_set("string", "from_uri", $fu, "$var(http_routing_query)");
    jansson_set("string", "to_uri", $tu, "$var(http_routing_query)");
    $http_req(body) = $var(http_routing_query);
    t_newtran();
    http_async_query("http://localhost:8081/check_restrict", "RESTRICT_RESPONSE");
}

route[RESTRICT_RESPONSE] {
    if ($http_ok && $http_rs == 204) {
        route(RELAY);
    } else {
        sl_send_reply("403", "RESTRICT");
        exit;
    }
}
